version: '3'

services:
  frontend:
    restart: always
    build: 
      context: frontend
      dockerfile: Dockerfile.dev
    command: npx vite --host 0.0.0.0 --port 80
    ports: 
      - 8080:80
    volumes:
      - $PWD/frontend:/app
      - torii-frontend-node-modules:/app/node_modules
    depends_on:
      backend:
        condition: service_started

  backend:
    restart: always
    build: 
      context: backend
      dockerfile: Dockerfile.dev
    command: cargo run --config /app/exemples/config.yaml
    environment:
      DB_CONNECTION_URL: postgres://postgres:postgres@postgres:5432/torii
    ports:
      - 9999:9999
    volumes:
      - $PWD/backend:/app
      - torii-backend-rust:/root/.cargo
      - torii-backend-target:/app/target
    depends_on:
      - init-postgres

  postgres:
    image: postgres:16-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: torii
    ports:
      - 5432:5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 2s
      timeout: 5s
      retries: 10

  # Container used to initialize the database
  init-postgres:
    image: postgres:16-alpine
    environment:
      POSTGRES_PASSWORD: fake
    volumes:
      - $PWD/backend/db:/tmp/db
    command: ["psql", "postgres://postgres:postgres@postgres:5432/torii", "-f", "/tmp/db/schema.sql"]
    depends_on:
      postgres:
        condition: service_healthy

volumes:
  torii-backend-rust:
  torii-backend-target:
  torii-frontend-node-modules:
